utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
q()
library(reticulate)
py_run_file("C:/Users/bencros/Downloads/Untitled.ipynb")
py_run_file("C:/Users/bencros/Downloads/Untitled.py")
moviepy.editor <- import("movie.editor")
moviepy.editor <- import("moviepy.editor")
moviepy.editor <- import("moviepy.editor")
suppressWarnings(
suppressPackageStartupMessages({
library(stringr)
library(purrr)
library(tidyr)
library(data.table)
library(httr)
library(jsonlite)     # For fromJSON function
library(dplyr)
library(lubridate)
})
)
library(httr)
url <- "https://tiktok82.p.rapidapi.com/getChallengeVideos"
queryString <- list(
hashtag = "fyp",
cursor = "50"
)
response <- VERB("GET",
url,
add_headers('X-RapidAPI-Key' = 'ee9f9a0a74mshdf11304da3f9e15p15be10jsna76036e001f3',
'X-RapidAPI-Host' = 'tiktok82.p.rapidapi.com'),
query = queryString,
content_type("application/octet-stream"))
content(response, "text")
data <- content(response, "text")
library(jsonlite)
fromJSON(data)
fromJSON(data$item_list)
data$data$item_list
data[item_list]
str(data)
dat <- fromJSON(data)
data <- fromJSON(data)
data <- data$data$item_list
colnames(data)
head(data)
head(unnest(data))
library(tidyr)
head(unnest(data))
colnames(unnest(data))
colnames(unnest(data), cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem))
colnames(unnest(data, cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem))
colnames(unnest(data, cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem)))
colnames(unnest(data, cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem)))
unnest(data, cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem))
unnest(data, cols = c(video, author, music, challenges, stats, duetInfo, textExtra, authorStats, warnInfo, effectStickers, stickersOnItem), keep_empty = TRUE)
unnest(data, cols = c(video), keep_empty = TRUE)
unnest(data, cols = c(video), keep_empty = TRUE, names_sep = ".")
data <- unnest(data, cols = c(video, author, stats), keep_empty = TRUE, names_sep = ".")
data <- content(response, "text")
data <- fromJSON(data)
data <- data$data$item_list
df <- unnest(data, cols = c(video, author, stats), keep_empty = TRUE, names_sep = ".")
df
df$video.downloadAddr[1]
vid <- tedf$video.downloadAddr[1]
vid <- df$video.downloadAddr[1]
url <- "https://tiktok82.p.rapidapi.com/getDownloadVideoWithWatermark"
queryString <- list(video_url = "https://v16-webapp-prime.us.tiktok.com/video/tos/useast5/tos-useast5-pve-0068-tx/6855e7222fb74ba5954ed7f8de3445ad/?a=1988&ch=0&cr=0&dr=0&lr=tiktok_m&cd=0%7C0%7C1%7C0&cv=1&br=3476&bt=1738&cs=0&ds=3&ft=_rKBMBnZq8Zmo4daTc_vjIIdsAhLrus&mime_type=video_mp4&qs=0&rc=ZjZoNmU5ZjVoNWlmZGc1M0BpM2VvO2Q6Zjk0ZzMzZzgzNEAwLS1iY2AxNmExLy0vYS81YSNwXjU1cjRnbjFgLS1kLy9zcw%3D%3D&expire=1681307363&l=2023041207485417C38850CEBEA500985D&ply_type=2&policy=2&signature=c358ffd2727693de6cb2a224a894392f&tk=tt_chain_token")
response <- VERB("GET", url, add_headers('X-RapidAPI-Key' = 'ee9f9a0a74mshdf11304da3f9e15p15be10jsna76036e001f3', 'X-RapidAPI-Host' = 'tiktok82.p.rapidapi.com'), query = queryString, content_type("application/octet-stream"))
content(response, "text")
colnames(df)
df$video.playAddr
df$video.playAddr[1]
df$video.playAddr[2]
data
author <- df$author.uniqueId
author <- df$author.uniqueId[1]
vid <- df$video.id
paste0("https://tiktok.com/@", author, vid)
author <- df$author.uniqueId
vid <- df$video.id
paste0("https://tiktok.com/@", author, vid)
paste0("https://tiktok.com/@", author, "/video/", vid)
download.file("https://v16m-default.akamaized.net/bc9533100084dee83be187b558624d3b/6436be34/video/tos/maliva/tos-maliva-ve-0068c799-us/f3fa0ee5a95c4a43939703a920a36e1f/?a=0&ch=0&cr=0&dr=0&lr=all&cd=0%7C0%7C0%7C0&cv=1&br=3334&bt=1667&cs=0&ds=3&ft=iJOG.y7oZZv0PD1i-I6Xg9wMy2j5kEeC~&mime_type=video_mp4&qs=0&rc=Zzk3OzpoNDczNmQ8Ozc4Z0BpM2VvO2Q6Zjk0ZzMzZzgzNEAxYi0yL18wX2MxLjVfMF9fYSNwXjU1cjRnbjFgLS1kLy9zcw%3D%3D&l=20230412082005D9D39EF4E4599C3759A8&btag=80000",
"test.mp4")
download.file("https://v16m-default.akamaized.net/bc9533100084dee83be187b558624d3b/6436be34/video/tos/maliva/tos-maliva-ve-0068c799-us/f3fa0ee5a95c4a43939703a920a36e1f/?a=0&ch=0&cr=0&dr=0&lr=all&cd=0%7C0%7C0%7C0&cv=1&br=3334&bt=1667&cs=0&ds=3&ft=iJOG.y7oZZv0PD1i-I6Xg9wMy2j5kEeC~&mime_type=video_mp4&qs=0&rc=Zzk3OzpoNDczNmQ8Ozc4Z0BpM2VvO2Q6Zjk0ZzMzZzgzNEAxYi0yL18wX2MxLjVfMF9fYSNwXjU1cjRnbjFgLS1kLy9zcw%3D%3D&l=20230412082005D9D39EF4E4599C3759A8&btag=80000",
"test.mp4")
download.file(df$video.downloadAddr[1],
"test.mp4")
download.file(df$video.downloadAddr[2],
"test.mp4")
download.file(df$video.downloadAddr[4],
"test.mp4")
data
paste0("https://tiktok.com/@", author, "/video/", vid)
# Google Docs - https://docs.google.com/document/d/1nFisfUKHSrZeAkEKCVKBEhnhduB_cNzoZ65VBsGYqPQ/edit
setwd("C:/Users/bencros/Documents/GitHub/ManUniRCourse/")
1+        5000
# Trigonometry
sin(1)
sin(1) # Trigonometry
log(1) # Logarithms
log(10) # Base-10 logarithm
exp(0.5) # Exponential function
#----COMPARISONS----# ####
1 == 1 # Equality
1 != 2 # Inequality
1 < 2 # Less than
1 <= 1 # Less than or equal to
1 >= -9 # Greater than or equal to
x <- 1/40
x
log(x)
x <- 100
x
x <- x + 1
x
sentence <- "The cat sat on the mat"
sentence + 1
_age <- 4
min-lenght <- 4
2widths <- 4
mass <- 47.5
age <- 122
mass <- mass * 2.3
age <- age - 20
mass > age
# Create vector
1:5
-3:3
(1:5) * 2
(1:5)^2
2^(1:5)
# Can assign it
x <- 5:10
y <- c(2, 4, -1)
# They can also be strings
c("a", "b", "c", "def")
LETTERS
letters
month.abb
month.name
length(x)
length(letters)
month.name[4:2]
month.name[10:13]
x == NA
#----SUBSETTING WITH LOGICAL VECTORS----# ####
fourmonths <- month.name[1:4] # First 4 months of year
fourmonths
fourmonths[c(TRUE, FALSE, TRUE, TRUE)]
# Remove Feb
fourmonths[c(TRUE, FALSE, TRUE, TRUE)]
fourmonths[c(TRUE, FALSE)]
# WE can do this in a numeric way too
my_vector <- c(0.01, 0.69, 0.51, 0.39)
my_vector > 0.5
my_vector[my_vector > 0.5]
my_vector[my_vector > 0.5] # To get values greater than 0.5
-letters
letters
letters[26:1]
x <- c(5.4, 6.2, 7.1, 7.5, 4.8)
x[c(FALSE, TRUE, TRUE, TRUE, FALSE)]
x[c(2, 3, 4)]
x[-c(1, 5)]
x[x > 0.5]
x[x > 0.54 == TRUE]
x[x > 0.54]
x > 0.54
x > 5.4
x[x > 5.4]
sort(letters, decreasing = TRUE)
library(readr)
install.packages("readr")
library(readr)
cats <- read_csv("data/feline-data.csv")
spec(cats)
cats
# Specify data type
cats <- read_csv("data/feline-data.csv", col_types = cols(
coat = col_character(),
weight = col_double(),
likes_string = col_logical()
) )
cats
# New file same types
cats2 <- read_csv("data/feline-data_v2.csv", col_types = cols(
coat = col_character(),
weight = col_double(),
likes_string = col_logical()
) )
View(cats2)
cats$weight # Access column
cats[,2]
cats[1:2,2:3]
final_data <- cats[,c(1,3)]
write_csv(final_data, "data/final_data.csv")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
# Read gapminder data
gapminder <- read_csv("data/gapminder-FiveYearData.csv")
# Seclect()
year_country_gdp <- select(gapminder, year, country,
gdpPercap)
# Filter()
gapminder_europe <- filter(gapminder,
continent == "Europe")
# Pipe Operator
gapminder %>%
filter(continent == "Europe") %>%
select(year, country, gdpPercap)
# Pipe Operator
gapminder_ar <- gapminder %>%
filter(continent == "Europe") %>%
select(year, country, gdpPercap)
# Pipe Operator
gapminder_ar <- gapminder %>%
filter(continent == "Europe") %>%
select(year, country, gdpPercap)
